////////////////////////////////////////////////////////////////////////////////
// Headings
////////////////////////////////////////////////////////////////////////////////

@use 'sass:string';
@use 'sass:map';
@use 'sass:meta';
@use 'sass:math';
@use './helpers/font';
@use './modules/unit';

// Default Heading Values ------------------------------------------------------

$h1 : (
  'font-size'   : 3.0rem,
  'line-height' : 1.1
) !default;

$h2 : (
  'font-size'   : 2.5rem,
  'line-height' : 1.3
) !default;

$h3 : (
  'font-size'   : 2.2rem,
  'line-height' : 1.4
) !default;

$h4 : (
  'font-size'   : 2.0rem,
  'line-height' : 1.4
) !default;

$h5 : (
  'font-size'   : 1.8rem,
  'line-height' : 1.4
) !default;

$h6 : (
  'font-size'   : 1.6rem,
  'line-height' : 1.4
) !default;

$base : 62.5 !default;
$scaler : 1.5vw !default;
$enable-cropping : false !default;

// Fallback Line-heights should they not have been passed ----------------------

@if not map.has-key($h1, "line-height") { $h1 : map.set($h1, 'line-height', 1.1); }
@if not map.has-key($h2, "line-height") { $h2 : map.set($h2, 'line-height', 1.3); }
@if not map.has-key($h3, "line-height") { $h3 : map.set($h3, 'line-height', 1.4); }
@if not map.has-key($h4, "line-height") { $h4 : map.set($h4, 'line-height', 1.4); }
@if not map.has-key($h5, "line-height") { $h5 : map.set($h5, 'line-height', 1.4); }
@if not map.has-key($h6, "line-height") { $h6 : map.set($h6, 'line-height', 1.4); }

// Define the variables so they are still accesible ----------------------------

$h1-font-size     : map-get($h1, 'font-size');
$h1-line-height   : map-get($h1, 'line-height');
$h1-font-size-min : if(map.has-key($h1, "font-size-min"), map-get($h1, "font-size-min"), false);
$h1-scaler        : if(map.has-key($h1, "scaler"), map-get($h1, "scaler"), $scaler);

$h2-font-size     : map-get($h2, 'font-size');
$h2-line-height   : map-get($h2, 'line-height');
$h2-font-size-min : if(map.has-key($h2, "font-size-min"), map-get($h2, "font-size-min"), false);
$h2-scaler        : if(map.has-key($h2, "scaler"), map-get($h2, "scaler"), $scaler);

$h3-font-size     : map-get($h3, 'font-size');
$h3-line-height   : map-get($h3, 'line-height');
$h3-font-size-min : if(map.has-key($h3, "font-size-min"), map-get($h3, "font-size-min"), false);
$h3-scaler        : if(map.has-key($h3, "scaler"), map-get($h3, "scaler"), $scaler);

$h4-font-size     : map-get($h4, 'font-size');
$h4-line-height   : map-get($h4, 'line-height');
$h4-font-size-min : if(map.has-key($h4, "font-size-min"), map-get($h4, "font-size-min"), false);
$h4-scaler        : if(map.has-key($h4, "scaler"), map-get($h4, "scaler"), $scaler);

$h5-font-size     : map-get($h5, 'font-size');
$h5-line-height   : map-get($h5, 'line-height');
$h5-font-size-min : if(map.has-key($h5, "font-size-min"), map-get($h5, "font-size-min"), false);
$h5-scaler        : if(map.has-key($h5, "scaler"), map-get($h5, "scaler"), $scaler);

$h6-font-size     : map-get($h6, 'font-size');
$h6-line-height   : map-get($h6, 'line-height');
$h6-font-size-min : if(map.has-key($h6, "font-size-min"), map-get($h6, "font-size-min"), false);
$h6-scaler        : if(map.has-key($h6, "scaler"), map-get($h6, "scaler"), $scaler);

// Handles Crops should they not have been passed ------------------------------

$_h1-crop-top    : if(map.has-key($h1, "crop-top"), map-get($h1, "crop-top"), false);
$_h2-crop-top    : if(map.has-key($h2, "crop-top"), map-get($h2, "crop-top"), false);
$_h3-crop-top    : if(map.has-key($h3, "crop-top"), map-get($h3, "crop-top"), false);
$_h4-crop-top    : if(map.has-key($h4, "crop-top"), map-get($h4, "crop-top"), false);
$_h5-crop-top    : if(map.has-key($h5, "crop-top"), map-get($h5, "crop-top"), false);
$_h6-crop-top    : if(map.has-key($h6, "crop-top"), map-get($h6, "crop-top"), false);

$_h1-crop-bottom : if(map.has-key($h1, "crop-bottom"), map-get($h1, "crop-bottom"), false);
$_h2-crop-bottom : if(map.has-key($h2, "crop-bottom"), map-get($h2, "crop-bottom"), false);
$_h3-crop-bottom : if(map.has-key($h3, "crop-bottom"), map-get($h3, "crop-bottom"), false);
$_h4-crop-bottom : if(map.has-key($h4, "crop-bottom"), map-get($h4, "crop-bottom"), false);
$_h5-crop-bottom : if(map.has-key($h5, "crop-bottom"), map-get($h5, "crop-bottom"), false);
$_h6-crop-bottom : if(map.has-key($h6, "crop-bottom"), map-get($h6, "crop-bottom"), false);


// Mixins for each heading -----------------------------------------------------

@mixin _set-crop($font-size, $line-height, $crop) {

  @if (meta.type-of($crop) == 'map') {

    $font-size   : unit.strip($font-size) * 10;
    $line-height : unit.strip($line-height);
    $top         : if(map.has-key($crop, "top"), unit.strip(map.get($crop, "top")), 0);
    $bottom      : if(map.has-key($crop, "bottom"), unit.strip(map.get($crop, "bottom")), 0);

    @include font.crop($font-size, $line-height, $top, $bottom);

  }

}

@mixin h1($font-size-only : false, $crop : $enable-cropping) {

  font-size : font.size($h1-font-size);

  @if ( $h1-font-size-min and $h1-font-size-min < $h1-font-size ) {
    font-size : clamp(#{font.size($h1-font-size-min)}, #{$h1-scaler}, #{font.size($h1-font-size)});
  }

  @if not $font-size-only { 

    @if ( $crop ) { 
      @include font.crop($h1-font-size, $h1-line-height, $_h1-crop-top, $_h1-crop-bottom ); 
    } @else {
      line-height : $h1-line-height; 
    }

  }

}

@mixin h2($font-size-only : false, $crop : $enable-cropping) {

  font-size : font.size($h2-font-size);

  @if ( $h2-font-size-min and $h2-font-size-min < $h2-font-size ) {
    font-size : clamp(#{font.size($h2-font-size-min)}, #{$h2-scaler}, #{font.size($h2-font-size)});
  }

  @if not $font-size-only { 

    @if ( $crop ) { 
      @include font.crop($h2-font-size, $h2-line-height, $_h2-crop-top, $_h2-crop-bottom ); 
    } @else {
      line-height : $h2-line-height; 
    }
    
  }

}

@mixin h3($font-size-only : false, $crop : $enable-cropping) {

  font-size : font.size($h3-font-size);

  @if ( $h3-font-size-min and $h3-font-size-min < $h3-font-size ) {
    font-size : clamp(#{font.size($h3-font-size-min)}, #{$h3-scaler}, #{font.size($h3-font-size)});
  }

  @if not $font-size-only { 

    @if ( $crop ) { 
      @include font.crop($h3-font-size, $h3-line-height, $_h3-crop-top, $_h3-crop-bottom ); 
    } @else {
      line-height : $h3-line-height; 
    }
    
  }

}

@mixin h4($font-size-only : false, $crop : $enable-cropping) {

  font-size : font.size($h4-font-size);

  @if ( $h4-font-size-min and $h4-font-size-min < $h4-font-size ) {
    font-size : clamp(#{font.size($h4-font-size-min)}, #{$h4-scaler}, #{font.size($h4-font-size)});
  }

  @if not $font-size-only { 

    @if ( $crop ) { 
      @include font.crop($h4-font-size, $h4-line-height, $_h4-crop-top, $_h4-crop-bottom ); 
    } @else {
      line-height : $h4-line-height; 
    }
    
  }

}

@mixin h5($font-size-only : false, $crop : $enable-cropping) {

  font-size : font.size($h5-font-size);

  @if ( $h5-font-size-min and $h5-font-size-min < $h5-font-size ) {
    font-size : clamp(#{font.size($h5-font-size-min)}, #{$h5-scaler}, #{font.size($h5-font-size)});
  }

  @if not $font-size-only { 

    @if ( $crop ) { 
      @include font.crop($h5-font-size, $h5-line-height, $_h5-crop-top, $_h5-crop-bottom ); 
    } @else {
      line-height : $h5-line-height; 
    }
    
  }

}

@mixin h6($font-size-only : false, $crop : $enable-cropping) {

  font-size : font.size($h6-font-size);

  @if ( $h6-font-size-min and $h6-font-size-min < $h6-font-size ) {
    font-size : clamp(#{font.size($h6-font-size-min)}, #{$h6-scaler}, #{font.size($h6-font-size)});
  }

  @if not $font-size-only { 

    @if ( $crop ) { 
      @include font.crop2($h6-font-size, $h6-line-height, $_h6-crop-top, $_h6-crop-bottom ); 
    } @else {
      line-height : $h6-line-height; 
    }
    
  }

}


